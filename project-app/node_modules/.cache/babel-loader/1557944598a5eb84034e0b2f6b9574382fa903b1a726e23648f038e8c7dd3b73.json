{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OWNER\\\\Documents\\\\script\\\\html\\\\homework\\\\APL-project-html\\\\project-app\\\\src\\\\components\\\\Game\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChoiceDifficult = ({\n  setDifficult\n}) => {\n  // write a difficult and theme changer -- use input element\n  // diffcult limitation is 1-100,\n  // theme can be country flag or foot .etc  just mark down the unicode here,or change direactly in function(setDeck)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"choiceDifficult\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(4),\n      children: \"\\u7C21\\u55AE\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(5),\n      children: \"\\u6B63\\u5E38\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(6),\n      children: \"\\u56F0\\u96E3\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = ChoiceDifficult;\nconst Card = props => {\n  const getClass = () => {\n    let newClass = 'card';\n    if (props.isFlipped || props.isMatched) newClass += ' flipped';\n    if (props.isMatched) newClass += ' matched';\n    return newClass;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getClass(),\n    onClick: props.onClick,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"card-back\",\n      children: props.emoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Card;\nconst setDeck = (columns, theme = '') => {\n  // write a shuffle func for (newCards) just add in setDeck\n  let newCards = [];\n  for (let i = 0; i < columns * 2; i++) {\n    const emoji = String.fromCodePoint(0x1f601 + i);\n    newCards.push({\n      key: nanoid(),\n      emoji\n    }, {\n      key: nanoid(),\n      emoji\n    });\n  }\n  for (let i = 0; i < newCards.length; i++) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newCards[i], newCards[j]] = [newCards[j], newCards[i]];\n  }\n  return newCards;\n};\nexport default function Game() {\n  _s();\n  const [cards, setCards] = useState(setDeck(1));\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedEmojis, setMatchedEmojis] = useState([]);\n  const difficultyGetter = columns => {\n    setCards(setDeck(columns));\n    setFlippedCards([]);\n    setMatchedEmojis([]);\n  };\n  const checkCard = cardObj => {\n    if (flippedCards.length < 2 && !matchedEmojis.includes(cardObj.emoji) && !flippedCards.includes(cardObj)) {\n      const newFlippedCards = [cardObj, ...flippedCards];\n      setFlippedCards(newFlippedCards);\n      if (newFlippedCards.length === 2) {\n        setTimeout(() => {\n          if (newFlippedCards[0].emoji === newFlippedCards[1].emoji) {\n            setMatchedEmojis(emojis => [newFlippedCards[0].emoji, ...emojis]);\n          }\n          setFlippedCards([]);\n        }, 500);\n        console.log(matchedEmojis.length, cards.length / 2);\n        if (matchedEmojis.length == cards.length / 2) {\n          setTimeout(() => alert('you win'), 500);\n          difficultyGetter(5);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(ChoiceDifficult, {\n      setDifficult: difficultyGetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        ...card,\n        isMatched: matchedEmojis.includes(card.emoji),\n        isFlipped: flippedCards.includes(card),\n        onClick: () => checkCard(card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"zS06PJ/fjxeigkWvWzWwTLPYpqc=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChoiceDifficult\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","nanoid","jsxDEV","_jsxDEV","ChoiceDifficult","setDifficult","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Card","props","getClass","newClass","isFlipped","isMatched","emoji","_c2","setDeck","columns","theme","newCards","i","String","fromCodePoint","push","key","length","j","Math","floor","random","Game","_s","cards","setCards","flippedCards","setFlippedCards","matchedEmojis","setMatchedEmojis","difficultyGetter","checkCard","cardObj","includes","newFlippedCards","setTimeout","emojis","console","log","alert","map","card","_c3","$RefreshReg$"],"sources":["C:/Users/OWNER/Documents/script/html/homework/APL-project-html/project-app/src/components/Game/Game.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {nanoid} from 'nanoid';\r\nimport './Game.css';\r\n\r\nconst ChoiceDifficult = ({setDifficult}) => {\r\n    // write a difficult and theme changer -- use input element\r\n    // diffcult limitation is 1-100,\r\n    // theme can be country flag or foot .etc  just mark down the unicode here,or change direactly in function(setDeck)\r\n    return (\r\n        <div className=\"choiceDifficult\">\r\n            <button onClick={() => setDifficult(4)}>簡單模式</button>\r\n            <button onClick={() => setDifficult(5)}>正常模式</button>\r\n            <button onClick={() => setDifficult(6)}>困難模式</button>\r\n        </div>\r\n    );\r\n};\r\nconst Card = (props) => {\r\n    const getClass = () =>{\r\n        let newClass = 'card';\r\n        if (props.isFlipped || props.isMatched) newClass += ' flipped';\r\n        if (props.isMatched) newClass += ' matched'\r\n        return newClass\r\n    }\r\n    return (\r\n        <div className={getClass()}  onClick={props.onClick}>\r\n            <span className=\"card-back\">{props.emoji}</span>\r\n        </div>\r\n    )\r\n};\r\nconst setDeck = (columns,theme = '') =>{       // write a shuffle func for (newCards) just add in setDeck\r\n    let newCards = [];\r\n    for (let i = 0; i < columns*2; i++) {\r\n        const emoji = String.fromCodePoint(0x1f601 + i);\r\n        newCards.push({key:nanoid(),emoji},{key:nanoid(),emoji});\r\n    }\r\n    for (let i = 0; i < newCards.length; i++) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [newCards[i], newCards[j]] = [newCards[j], newCards[i]];\r\n    }\r\n    return newCards\r\n}\r\nexport default function Game(){\r\n    const [cards, setCards] = useState(setDeck(1));\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [matchedEmojis, setMatchedEmojis] = useState([]);\r\n\r\n    const difficultyGetter = (columns) => {\r\n        setCards(setDeck(columns))\r\n        setFlippedCards([])\r\n        setMatchedEmojis([])\r\n    }\r\n    const checkCard = (cardObj) => {\r\n        if (flippedCards.length < 2 && !matchedEmojis.includes(cardObj.emoji) && !flippedCards.includes(cardObj)) {\r\n            const newFlippedCards = [cardObj,...flippedCards];\r\n            setFlippedCards(newFlippedCards)\r\n            if (newFlippedCards.length === 2) {\r\n                setTimeout(() => {\r\n                if (newFlippedCards[0].emoji === newFlippedCards[1].emoji) {\r\n                    setMatchedEmojis((emojis) => [newFlippedCards[0].emoji,...emojis])\r\n                }setFlippedCards([])}, 500)\r\n                console.log(matchedEmojis.length,cards.length/2)\r\n                if (matchedEmojis.length == cards.length/2){\r\n                    setTimeout(()=> alert('you win'),500)\r\n                    difficultyGetter(5)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <main>\r\n            <ChoiceDifficult setDifficult={difficultyGetter} />\r\n            <div className=\"cards-container\">\r\n                {cards.map(card => (\r\n                    <Card {...card}\r\n                    isMatched={matchedEmojis.includes(card.emoji)}\r\n                    isFlipped={flippedCards.includes(card)}\r\n                    onClick={() => checkCard(card)}/>\r\n                ))}\r\n            </div>\r\n        </main>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}