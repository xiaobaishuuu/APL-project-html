{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OWNER\\\\Documents\\\\script\\\\html\\\\homework\\\\APL-project-html\\\\project-app\\\\src\\\\components\\\\Game\\\\Game.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChoiceDifficult = ({\n  setDifficult\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"choiceDifficult\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(4),\n      children: \"\\u7C21\\u55AE\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(5),\n      children: \"\\u6B63\\u5E38\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(6),\n      children: \"\\u56F0\\u96E3\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ChoiceDifficult;\nconst Card = props => {\n  _s();\n  flipList;\n  const [isMatched, setIsMatched] = useState(false);\n  const cardClick = () => {\n    if (flippedCards.length < 2 && !matchedEmojis.includes(cardObj.emoji)) {\n      const newFlippedCards = [cardObj, ...flippedCards];\n      if (newFlippedCards.length === 2) {\n        setFlippedCards(newFlippedCards);\n        setTimeout(() => {\n          checkForMatch(newFlippedCards);\n        }, 500);\n      } else {\n        setFlippedCards(newFlippedCards);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.isFlipped === true ? 'card flipped' : 'card',\n    onClick: cardClick,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.isFlipped ? props.emoji : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"n9F4kNonc+jxYWuGSahIWIr3NpM=\");\n_c2 = Card;\nconst setDeck = columns => {\n  let newCards = [];\n  for (let i = 0; i < columns * 2; i++) {\n    const emoji = String.fromCodePoint(0x1f601 + i);\n    newCards.push({\n      key: nanoid(),\n      emoji\n    });\n    newCards.push({\n      key: nanoid(),\n      emoji\n    });\n  }\n  return newCards.sort(() => -0.5);\n};\nexport default function Game() {\n  _s2();\n  const [cards, setCards] = useState(setDeck(5));\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedEmojis, setMatchedEmojis] = useState([]);\n  const handleCardClick = cardObj => {\n    if (flippedCards.length < 2 && !matchedEmojis.includes(cardObj.emoji)) {\n      const newFlippedCards = [cardObj, ...flippedCards];\n      if (newFlippedCards.length === 2) {\n        setFlippedCards(newFlippedCards);\n        setTimeout(() => {\n          checkForMatch(newFlippedCards);\n        }, 500);\n      } else {\n        setFlippedCards(newFlippedCards);\n      }\n    }\n  };\n  const checkForMatch = flippedCards => {\n    if (flippedCards[0].emoji === flippedCards[1].emoji) {\n      setMatchedEmojis(emojis => [...emojis, flippedCards[0].emoji]);\n    }\n    setFlippedCards([]);\n  };\n  const difficultyGetter = columns => {\n    setCards(setDeck(columns));\n    setFlippedCards([]);\n    setMatchedEmojis([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(ChoiceDifficult, {\n      setDifficult: difficultyGetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        ...card,\n        matchedList: matchedEmojis,\n        isFlipped: matchedEmojis.includes(card.emoji) || flippedCards.includes(card),\n        onClick: () => handleCardClick(card)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s2(Game, \"Q/D4ikgKYc0f82Q0pORm/OwsHO8=\");\n_c3 = Game;\n;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChoiceDifficult\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","nanoid","jsxDEV","_jsxDEV","ChoiceDifficult","setDifficult","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Card","props","_s","flipList","isMatched","setIsMatched","cardClick","flippedCards","length","matchedEmojis","includes","cardObj","emoji","newFlippedCards","setFlippedCards","setTimeout","checkForMatch","isFlipped","_c2","setDeck","columns","newCards","i","String","fromCodePoint","push","key","sort","Game","_s2","cards","setCards","setMatchedEmojis","handleCardClick","emojis","difficultyGetter","map","card","matchedList","id","_c3","$RefreshReg$"],"sources":["C:/Users/OWNER/Documents/script/html/homework/APL-project-html/project-app/src/components/Game/Game.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport './Game.css';\r\n\r\nconst ChoiceDifficult = ({setDifficult}) => {\r\n    return (\r\n        <div className=\"choiceDifficult\">\r\n            <button onClick={() => setDifficult(4)}>簡單模式</button>\r\n            <button onClick={() => setDifficult(5)}>正常模式</button>\r\n            <button onClick={() => setDifficult(6)}>困難模式</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Card = (props) => {\r\n    flipList\r\n    const [isMatched,setIsMatched] = useState(false)\r\n\r\n    const cardClick = () => {\r\n        if (flippedCards.length < 2 && !matchedEmojis.includes(cardObj.emoji)) {\r\n            const newFlippedCards = [cardObj,...flippedCards];\r\n            if (newFlippedCards.length === 2) {\r\n                setFlippedCards(newFlippedCards);\r\n                setTimeout(() => {checkForMatch(newFlippedCards);}, 500);\r\n            } else {\r\n                setFlippedCards(newFlippedCards);\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div className={props.isFlipped === true ? 'card flipped' : 'card'}  onClick={cardClick}>\r\n            {/* <span className=\"card-face card-front\"></span>\r\n            <span className=\"card-face card-back\">{props.emoji}</span> */}\r\n            <span>{props.isFlipped ? props.emoji : ''}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst setDeck = (columns) =>{\r\n    let newCards = [];\r\n    for (let i = 0; i < columns*2; i++) {\r\n        const emoji = String.fromCodePoint(0x1f601 + i);\r\n        newCards.push({key:nanoid(),emoji});\r\n        newCards.push({key:nanoid(),emoji});\r\n    }\r\n    return newCards.sort(() =>  - 0.5)\r\n}\r\n\r\nexport default function Game(){\r\n    const [cards, setCards] = useState(setDeck(5));\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [matchedEmojis, setMatchedEmojis] = useState([]);\r\n\r\n    const handleCardClick = (cardObj) => {\r\n        if (flippedCards.length < 2 && !matchedEmojis.includes(cardObj.emoji)) {\r\n            const newFlippedCards = [cardObj,...flippedCards];\r\n            if (newFlippedCards.length === 2) {\r\n                setFlippedCards(newFlippedCards);\r\n                setTimeout(() => {checkForMatch(newFlippedCards);}, 500);\r\n            } else {\r\n                setFlippedCards(newFlippedCards);\r\n            }\r\n        }\r\n    };\r\n\r\n    const checkForMatch = (flippedCards) => {\r\n        if (flippedCards[0].emoji === flippedCards[1].emoji) {\r\n            setMatchedEmojis((emojis) => [...emojis, flippedCards[0].emoji]);\r\n        }\r\n        setFlippedCards([]);\r\n    };\r\n\r\n    const difficultyGetter = (columns) => {\r\n        setCards(setDeck(columns));\r\n        setFlippedCards([])\r\n        setMatchedEmojis([])\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <ChoiceDifficult setDifficult={difficultyGetter} />\r\n            <div className=\"cards-container\">\r\n                {cards.map(card => (\r\n                    <Card key={card.id} {...card}\r\n                    matchedList={matchedEmojis}\r\n                    isFlipped={matchedEmojis.includes(card.emoji) || flippedCards.includes(card)}\r\n                    onClick={() => handleCardClick(card)}/>\r\n                ))}\r\n            </div>\r\n        </main>\r\n    );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,eAAe,GAAGA,CAAC;EAACC;AAAY,CAAC,KAAK;EACxC,oBACIF,OAAA;IAAKG,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BJ,OAAA;MAAQK,OAAO,EAAEA,CAAA,KAAMH,YAAY,CAAC,CAAC,CAAE;MAAAE,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDT,OAAA;MAAQK,OAAO,EAAEA,CAAA,KAAMH,YAAY,CAAC,CAAC,CAAE;MAAAE,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDT,OAAA;MAAQK,OAAO,EAAEA,CAAA,KAAMH,YAAY,CAAC,CAAC,CAAE;MAAAE,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd,CAAC;AAACC,EAAA,GARIT,eAAe;AAUrB,MAAMU,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpBC,QAAQ;EACR,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEhD,MAAMoB,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIC,YAAY,CAACC,MAAM,GAAG,CAAC,IAAI,CAACC,aAAa,CAACC,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,EAAE;MACnE,MAAMC,eAAe,GAAG,CAACF,OAAO,EAAC,GAAGJ,YAAY,CAAC;MACjD,IAAIM,eAAe,CAACL,MAAM,KAAK,CAAC,EAAE;QAC9BM,eAAe,CAACD,eAAe,CAAC;QAChCE,UAAU,CAAC,MAAM;UAACC,aAAa,CAACH,eAAe,CAAC;QAAC,CAAC,EAAE,GAAG,CAAC;MAC5D,CAAC,MAAM;QACHC,eAAe,CAACD,eAAe,CAAC;MACpC;IACJ;EACJ,CAAC;EACD,oBACIxB,OAAA;IAAKG,SAAS,EAAES,KAAK,CAACgB,SAAS,KAAK,IAAI,GAAG,cAAc,GAAG,MAAO;IAAEvB,OAAO,EAAEY,SAAU;IAAAb,QAAA,eAGpFJ,OAAA;MAAAI,QAAA,EAAOQ,KAAK,CAACgB,SAAS,GAAGhB,KAAK,CAACW,KAAK,GAAG;IAAE;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAACI,EAAA,CAtBIF,IAAI;AAAAkB,GAAA,GAAJlB,IAAI;AAwBV,MAAMmB,OAAO,GAAIC,OAAO,IAAI;EACxB,IAAIC,QAAQ,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,GAAC,CAAC,EAAEE,CAAC,EAAE,EAAE;IAChC,MAAMV,KAAK,GAAGW,MAAM,CAACC,aAAa,CAAC,OAAO,GAAGF,CAAC,CAAC;IAC/CD,QAAQ,CAACI,IAAI,CAAC;MAACC,GAAG,EAACvC,MAAM,CAAC,CAAC;MAACyB;IAAK,CAAC,CAAC;IACnCS,QAAQ,CAACI,IAAI,CAAC;MAACC,GAAG,EAACvC,MAAM,CAAC,CAAC;MAACyB;IAAK,CAAC,CAAC;EACvC;EACA,OAAOS,QAAQ,CAACM,IAAI,CAAC,MAAO,CAAE,GAAG,CAAC;AACtC,CAAC;AAED,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,GAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG7C,QAAQ,CAACiC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACZ,YAAY,EAAEO,eAAe,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuB,aAAa,EAAEuB,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM+C,eAAe,GAAItB,OAAO,IAAK;IACjC,IAAIJ,YAAY,CAACC,MAAM,GAAG,CAAC,IAAI,CAACC,aAAa,CAACC,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,EAAE;MACnE,MAAMC,eAAe,GAAG,CAACF,OAAO,EAAC,GAAGJ,YAAY,CAAC;MACjD,IAAIM,eAAe,CAACL,MAAM,KAAK,CAAC,EAAE;QAC9BM,eAAe,CAACD,eAAe,CAAC;QAChCE,UAAU,CAAC,MAAM;UAACC,aAAa,CAACH,eAAe,CAAC;QAAC,CAAC,EAAE,GAAG,CAAC;MAC5D,CAAC,MAAM;QACHC,eAAe,CAACD,eAAe,CAAC;MACpC;IACJ;EACJ,CAAC;EAED,MAAMG,aAAa,GAAIT,YAAY,IAAK;IACpC,IAAIA,YAAY,CAAC,CAAC,CAAC,CAACK,KAAK,KAAKL,YAAY,CAAC,CAAC,CAAC,CAACK,KAAK,EAAE;MACjDoB,gBAAgB,CAAEE,MAAM,IAAK,CAAC,GAAGA,MAAM,EAAE3B,YAAY,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC,CAAC;IACpE;IACAE,eAAe,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAMqB,gBAAgB,GAAIf,OAAO,IAAK;IAClCW,QAAQ,CAACZ,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1BN,eAAe,CAAC,EAAE,CAAC;IACnBkB,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,oBACI3C,OAAA;IAAAI,QAAA,gBACIJ,OAAA,CAACC,eAAe;MAACC,YAAY,EAAE4C;IAAiB;MAAAxC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDT,OAAA;MAAKG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3BqC,KAAK,CAACM,GAAG,CAACC,IAAI,iBACXhD,OAAA,CAACW,IAAI;QAAA,GAAmBqC,IAAI;QAC5BC,WAAW,EAAE7B,aAAc;QAC3BQ,SAAS,EAAER,aAAa,CAACC,QAAQ,CAAC2B,IAAI,CAACzB,KAAK,CAAC,IAAIL,YAAY,CAACG,QAAQ,CAAC2B,IAAI,CAAE;QAC7E3C,OAAO,EAAEA,CAAA,KAAMuC,eAAe,CAACI,IAAI;MAAE,GAH1BA,IAAI,CAACE,EAAE;QAAA5C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGoB,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAAC+B,GAAA,CA3CuBD,IAAI;AAAAY,GAAA,GAAJZ,IAAI;AA2C3B;AAAC,IAAA7B,EAAA,EAAAmB,GAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAA1C,EAAA;AAAA0C,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}