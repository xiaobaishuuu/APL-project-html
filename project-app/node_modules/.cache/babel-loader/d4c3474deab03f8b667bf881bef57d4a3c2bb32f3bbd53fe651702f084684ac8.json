{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OWNER\\\\Documents\\\\script\\\\html\\\\homework\\\\APL-project-html\\\\project-app\\\\src\\\\components\\\\Game\\\\Game.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChoiceDifficult = ({\n  setDifficult\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"choiceDifficult\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(4),\n      children: \"\\u7C21\\u55AE\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(5),\n      children: \"\\u6B63\\u5E38\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDifficult(6),\n      children: \"\\u56F0\\u96E3\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ChoiceDifficult;\nconst Card = props => {\n  _s();\n  const [className, setClassName] = useState('card');\n  const handleCardClick = cardObj => {\n    if (props.flippedCards.length < 2 && !props.matchCards.includes(cardObj.emoji)) {\n      const newFlippedCards = [cardObj, ...flippedCards];\n      setFlippedCards(newFlippedCards);\n      if (newFlippedCards.length === 2) {\n        setTimeout(() => {\n          checkForMatch(newFlippedCards);\n        }, 500);\n      }\n    }\n  };\n  useEffect(() => {\n    let newClass = 'card';\n    if (props.isFlipped || props.isMatched) newClass += ' flipped';\n    if (props.isMatched) newClass += ' matched';else if (!props.isMatched) {\n      // newClass += ' notmatched';\n      // setTimeout(() => {setClassName((cls) => cls.replace(' notmatched', ''));}, 1000);\n    }\n    setClassName(newClass);\n  }, [props.isFlipped, props.isMatched]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    onClick: props.onClick,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"card-back\",\n      children: props.emoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"/nFWMRDbn00GBg/zWmMGXTK7Szc=\");\n_c2 = Card;\nconst setDeck = columns => {\n  let newCards = [];\n  for (let i = 0; i < columns * 2; i++) {\n    const emoji = String.fromCodePoint(0x1f601 + i);\n    newCards.push({\n      key: nanoid(),\n      emoji\n    });\n    newCards.push({\n      key: nanoid(),\n      emoji\n    });\n  }\n  return newCards.sort(() => -0.5);\n};\nexport default function Game() {\n  _s2();\n  const [cards, setCards] = useState(setDeck(5));\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedEmojis, setMatchedEmojis] = useState([]);\n  const difficultyGetter = columns => {\n    setCards(setDeck(columns));\n    setFlippedCards([]);\n    setMatchedEmojis([]);\n  };\n  const handleCardClick = cardObj => {\n    if (flippedCards.length < 2 && !matchedEmojis.includes(cardObj.emoji)) {\n      const newFlippedCards = [cardObj, ...flippedCards];\n      setFlippedCards(newFlippedCards);\n      if (newFlippedCards.length === 2) {\n        setTimeout(() => {\n          checkForMatch(newFlippedCards);\n        }, 500);\n      }\n    }\n  };\n  const checkForMatch = flippedCards => {\n    if (flippedCards[0].emoji === flippedCards[1].emoji) {\n      setMatchedEmojis(emojis => [flippedCards[0].emoji, ...emojis]);\n    }\n    setFlippedCards([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(ChoiceDifficult, {\n      setDifficult: difficultyGetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        ...card,\n        matchCards: matchedEmojis,\n        flippedCards: flippedCards,\n        isMatched: matchedEmojis.includes(card.emoji),\n        isFlipped: flippedCards.includes(card),\n        onClick: () => handleCardClick(card)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s2(Game, \"Q/D4ikgKYc0f82Q0pORm/OwsHO8=\");\n_c3 = Game;\n;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChoiceDifficult\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","nanoid","jsxDEV","_jsxDEV","ChoiceDifficult","setDifficult","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Card","props","_s","setClassName","handleCardClick","cardObj","flippedCards","length","matchCards","includes","emoji","newFlippedCards","setFlippedCards","setTimeout","checkForMatch","newClass","isFlipped","isMatched","_c2","setDeck","columns","newCards","i","String","fromCodePoint","push","key","sort","Game","_s2","cards","setCards","matchedEmojis","setMatchedEmojis","difficultyGetter","emojis","map","card","_c3","$RefreshReg$"],"sources":["C:/Users/OWNER/Documents/script/html/homework/APL-project-html/project-app/src/components/Game/Game.jsx"],"sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {nanoid} from 'nanoid';\r\nimport './Game.css';\r\n\r\nconst ChoiceDifficult = ({setDifficult}) => {\r\n    return (\r\n        <div className=\"choiceDifficult\">\r\n            <button onClick={() => setDifficult(4)}>簡單模式</button>\r\n            <button onClick={() => setDifficult(5)}>正常模式</button>\r\n            <button onClick={() => setDifficult(6)}>困難模式</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Card = (props) => {\r\n    const [className,setClassName] = useState('card')\r\n\r\n    const handleCardClick = (cardObj) => {\r\n        if (props.flippedCards.length < 2 && !props.matchCards.includes(cardObj.emoji)) {\r\n            const newFlippedCards = [cardObj,...flippedCards];\r\n            setFlippedCards(newFlippedCards);\r\n            if (newFlippedCards.length === 2) {\r\n                setTimeout(() => {checkForMatch(newFlippedCards);}, 500);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let newClass = 'card';\r\n        if (props.isFlipped || props.isMatched) newClass += ' flipped';\r\n        if (props.isMatched) newClass += ' matched'\r\n        else if (!props.isMatched){\r\n            // newClass += ' notmatched';\r\n            // setTimeout(() => {setClassName((cls) => cls.replace(' notmatched', ''));}, 1000);\r\n        }\r\n        setClassName(newClass);\r\n    }, [props.isFlipped, props.isMatched]);\r\n    return (\r\n        <div className={className}  onClick={props.onClick}>\r\n            <span className=\"card-back\">{props.emoji}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst setDeck = (columns) =>{\r\n    let newCards = [];\r\n    for (let i = 0; i < columns*2; i++) {\r\n        const emoji = String.fromCodePoint(0x1f601 + i);\r\n        newCards.push({key:nanoid(),emoji});\r\n        newCards.push({key:nanoid(),emoji});\r\n    }\r\n    return newCards.sort(() =>  - 0.5)\r\n}\r\n\r\nexport default function Game(){\r\n    const [cards, setCards] = useState(setDeck(5));\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [matchedEmojis, setMatchedEmojis] = useState([]);\r\n\r\n    const difficultyGetter = (columns) => {\r\n        setCards(setDeck(columns));\r\n        setFlippedCards([])\r\n        setMatchedEmojis([])\r\n    };\r\n\r\n    const handleCardClick = (cardObj) => {\r\n        if (flippedCards.length < 2 && !matchedEmojis.includes(cardObj.emoji)) {\r\n            const newFlippedCards = [cardObj,...flippedCards];\r\n            setFlippedCards(newFlippedCards);\r\n            if (newFlippedCards.length === 2) {\r\n                setTimeout(() => {checkForMatch(newFlippedCards);}, 500);\r\n            }\r\n        }\r\n    };\r\n\r\n    const checkForMatch = (flippedCards) => {\r\n        if (flippedCards[0].emoji === flippedCards[1].emoji) {\r\n            setMatchedEmojis((emojis) => [flippedCards[0].emoji,...emojis]);\r\n        }\r\n        setFlippedCards([]);\r\n    };\r\n    return (\r\n        <main>\r\n            <ChoiceDifficult setDifficult={difficultyGetter} />\r\n            <div className=\"cards-container\">\r\n                {cards.map(card => (\r\n                    <Card {...card}\r\n                    matchCards={matchedEmojis}\r\n                    flippedCards={flippedCards}\r\n                    isMatched={matchedEmojis.includes(card.emoji)}\r\n                    isFlipped={flippedCards.includes(card)}\r\n                    onClick={() => handleCardClick(card)}/>\r\n                ))}\r\n            </div>\r\n        </main>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}